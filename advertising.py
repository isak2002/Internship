# -*- coding: utf-8 -*-
"""Advertising.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Cg6gdcUqttZEe_LNuOzo96zYSnj8ufNq

# Importing Libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""#### Import Dataset i.e. advertising.csv file"""

data = pd.read_csv("advertising.csv")
data

"""### Data Profiling"""

# Getting Information anout dataset
data.info()

# Checking for Null values
data.isnull().sum()

# Checking for Correlation
data.corr()

# draw a Plot to see the correlation b/w the variables or features using heatmap
sns.heatmap(data.corr(),annot=True)

# Describing about dataset
data.describe()

"""### Checking for outliers"""

sns.boxplot(data["TV"])

sns.boxplot(data["Radio"])

sns.boxplot(data["Newspaper"])

sns.boxplot(data["Sales"])

"""### As all the columns are numerical so no need of using "Encoding Techniques"
"""

# Spliting the data into two parts using x and y variables
x = data.iloc[:,:-1]
y = data.iloc[:,-1]

# Split X and Y into Train_Test_Split
from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size=0.2,random_state=60)

print(xtrain.shape,xtest.shape,ytrain.shape,ytest.shape)

# Model Training using xtrain and ytrain by using Linaer Regression
from sklearn.linear_model import LinearRegression
LE  = LinearRegression()
LE.fit(xtrain,ytrain)

# Model Prediction using xtest
ypred = LE.predict(xtest)
print(ypred)

ytest[:10]

# Checking Score of the model
LE.score(xtest,ytest)

"""### Not Required Standardization"""

# Standardising
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
xtrain_sc = sc.fit_transform(xtrain)
xtest_sc = sc.transform(xtest)

# retraining the model
# Model Training using xtrain and ytrain by using Linaer Regression
from sklearn.linear_model import LinearRegression
LE  = LinearRegression()
LE.fit(xtrain_sc,ytrain)

y_pred = LE.predict(xtest_sc)
print(y_pred)

ytest[:10]

LE.score(xtest_sc,ytest)